attribute vec4 vPosition;
attribute vec4 vNormal;
attribute vec2 uvCoords_in;
uniform mat4 mvpMatrix;
uniform mat4 modelInverseTransposeMatrix;
varying vec4 extraVariable;
varying vec2 uvCoords;
varying vec4 lightIntensity;

// Directional lights:
uniform vec4 DLight0Direction;
uniform vec4 DLight0AmbientColor;
uniform vec4 DLight0DiffuseColor;
uniform vec4 DLight0SpecularColor;

// Materials:
uniform vec4 MaterialAmbientColor;
uniform vec4 MaterialDiffuseColor;
uniform vec4 MaterialSpecularColor;

void main()
{
	gl_Position = mvpMatrix * vPosition;
	extraVariable = vec4(vPosition.x, vPosition.y, 1.0, 0.0);
	// uvCoords = vec2(vPosition.x, vPosition.y);
	uvCoords = uvCoords_in;

	vec4 vNormal_world = modelInverseTransposeMatrix * vNormal;
	float cosTheta = clamp( dot( vNormal_world, DLight0Direction ), 0.0, 1.0 );
	lightIntensity = DLight0DiffuseColor * cosTheta;

	// Fake the ambient lighting:
	lightIntensity = lightIntensity + DLight0AmbientColor;

	// Temp using variables:
	lightIntensity = lightIntensity + DLight0SpecularColor;
}

