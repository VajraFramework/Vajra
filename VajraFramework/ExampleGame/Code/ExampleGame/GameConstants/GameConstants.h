#ifndef GAME_CONSTANTS_H
#define GAME_CONSTANTS_H

/*
 * NOTE: When any of game constants in gameconstants.constants are modified, this file has to be regenerated by running generateEnums.pl in Tools/GameConstantsGenerator/
 */

#include <map>
#include <string>

enum GameConstantId_type {

	GAME_CONSTANT_camSpeed,
	GAME_CONSTANT_door_close_time,
	GAME_CONSTANT_ghostName,
	GAME_CONSTANT_someBoolVariable,
	GAME_CONSTANT_someIntVariable,
	GAME_CONSTANT_allowed_finger_movement_in_press,
	GAME_CONSTANT_long_press_length_in_seconds,
	GAME_CONSTANT_assassin_attack_speed,
	GAME_CONSTANT_swipe_dist_in_pixels,
	GAME_CONSTANT_swipe_duration_in_seconds,
	GAME_CONSTANT_dash_distance_in_units,
};

extern std::map<std::string, GameConstantId_type> gameConstantNameToId;
//
extern std::map<GameConstantId_type, float>       gameConstants_float;
extern std::map<GameConstantId_type, int>         gameConstants_int;
extern std::map<GameConstantId_type, std::string> gameConstants_string;
extern std::map<GameConstantId_type, bool>        gameConstants_bool;

void InitGameConstants();
void ReadInGameConstants();

float       GetFloatGameConstant(GameConstantId_type gameConstatnId);
int         GetIntGameConstant(GameConstantId_type gameConstatnId);
std::string GetStringGameConstant(GameConstantId_type gameConstatnId);
bool        GetBoolGameConstant(GameConstantId_type gameConstatnId);

#endif // GAME_CONSTANTS_H

